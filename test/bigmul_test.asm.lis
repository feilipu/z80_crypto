1     0000              MODULE bigmul_test_asm
2     0000              LINE 0, "test/bigmul_test.asm"
0     0000              
1     0000              ; Tests all 16 x 16 bit = 32 bit integer multiplications
2     0000              ; Out: HL = 0, if correct, prefix error length otherwise
3     0000              
4     0000              SECTION code_user
5     0000              
6     0000              EXTERN MUL8
7     0000              EXTERN BIGMUL
8     0000              
9     0000              PUBLIC _main
10    0000              
11    0000              defc bdos       = 05h                       ; bdos vector
12    0000              defc conout     = 2                         ; console output bdos call
13    0000              defc condio     = 6                         ; console direct I/O call
14    0000              defc prints     = 9                         ; print string bdos call
15    0000              defc cr         = 13                        ; carriage return
16    0000              defc lf         = 10                        ; line feed
17    0000              defc esc        = 27                        ; escape
18    0000              defc eos        = '$'                       ; end of string marker
19    0000              
20    0000              
21    0000              _main:
22    0000  D9                  EXX
23    0001  E5                  PUSH    HL
24    0002  D9                  EXX
25    0003              
26    0003              LOOP:
27    0003  1E 2E               ld      e,'.'                       ; print a progress comfort "."
28    0005  0E 06               ld      c, condio
29    0007  CD 05 00            call    bdos
30    000A              
31    000A  3A 00 01            LD      A,(XVALUE)
32    000D  47                  LD      B,A
33    000E  3A 00 02            LD      A,(YVALUE)
34    0011  4F                  LD      C,A
35    0012  CD 00 00            CALL    MUL8
36    0015  22 00 03            LD      (EXPECT),HL
37    0018  3A 01 01            LD      A,(XVALUE+1)
38    001B  47                  LD      B,A
39    001C  3A 01 02            LD      A,(YVALUE+1)
40    001F  4F                  LD      C,A
41    0020  CD 00 00            CALL    MUL8
42    0023  22 02 03            LD      (EXPECT+2),HL
43    0026  3A 00 01            LD      A,(XVALUE)
44    0029  47                  LD      B,A
45    002A  3A 01 02            LD      A,(YVALUE+1)
46    002D  4F                  LD      C,A
47    002E  CD 00 00            CALL    MUL8
48    0031  CD 8E 00            CALL    ADDMID
49    0034  3A 01 01            LD      A,(XVALUE+1)
50    0037  47                  LD      B,A
51    0038  3A 00 02            LD      A,(YVALUE)
52    003B  4F                  LD      C,A
53    003C  CD 00 00            CALL    MUL8
54    003F  CD 8E 00            CALL    ADDMID
55    0042  21 04 03            LD      HL,PRODUCT
56    0045              
57    0045  D9                  EXX
58    0046  21 00 01            LD      HL,XVALUE
59    0049  11 00 02            LD      DE,YVALUE
60    004C  06 02               LD      B,2
61    004E  CD 00 00            CALL    BIGMUL
62    0051              
63    0051  D9                  EXX
64    0052  11 04 03            LD      DE,PRODUCT
65    0055  06 04               LD      B,4
66    0057              L2:
67    0057  2B                  DEC     HL
68    0058  1B                  DEC     DE
69    0059  1A                  LD      A,(DE)
70    005A  BE                  CP      (HL)
71    005B  20 21               JR      NZ,ERROR
72    005D  10 F8               DJNZ    L2
73    005F              
74    005F  2A 00 01            LD      HL,(XVALUE)
75    0062  23                  INC     HL
76    0063  22 00 01            LD      (XVALUE),HL
77    0066  7D                  LD      A,L
78    0067  B4                  OR      H
79    0068  20 99               JR      NZ,LOOP
80    006A              
81    006A  2A 00 02            LD      HL,(YVALUE)
82    006D  23                  INC     HL
83    006E  22 00 02            LD      (YVALUE),HL
84    0071  7D                  LD      A,L
85    0072  B4                  OR      H
86    0073  20 8E               JR      NZ,LOOP
87    0075              
88    0075              
89    0075  E1                  POP     HL
90    0076              
91    0076  D9                  EXX
92    0077  11 00 00            LD      DE,PRINT_OK
93    007A  CD A5 00            CALL    prtmesg
94    007D  C9                  RET
95    007E              
96    007E              ERROR:
97    007E  E1                  POP     HL
98    007F  78                  LD      A,B
99    0080              
100   0080  D9                  EXX
101   0081  5F                  ld      e,a
102   0082  0E 06               ld      c, condio
103   0084  CD 05 00            call    bdos
104   0087  11 0D 00            LD      DE,PRINT_FAIL
105   008A  CD A5 00            CALL    prtmesg
106   008D  C9                  RET
107   008E              
108   008E              ADDMID:
109   008E  3A 01 03            LD      A,(EXPECT+1)
110   0091  85                  ADD     A,L
111   0092  32 01 03            LD      (EXPECT+1),A
112   0095  3A 02 03            LD      A,(EXPECT+2)
113   0098  8C                  ADC     A,H
114   0099  32 02 03            LD      (EXPECT+2),A
115   009C  D0                  RET     NC
116   009D              
117   009D  3A 03 03            LD      A,(EXPECT+3)
118   00A0  3C                  INC     A
119   00A1  32 03 03            LD      (EXPECT+3),A
120   00A4  C9                  RET
121   00A5              
122   00A5              ;------------------------------------------------------------------------------
123   00A5              ;   Print message pointed to by (DE). It will end with a '$'.
124   00A5              ;   modifies AF, DE, & HL
125   00A5              
126   00A5              SECTION  code_user
127   00A5              
128   00A5              prtmesg:
129   00A5  1A                  ld      a,(de)      ; Get character from DE address
130   00A6  FE 24               cp      '$'
131   00A8  C8                  ret     Z
132   00A9  13                  inc     de
133   00AA  D5                  push    de          ;otherwise, bump pointer and print it.
134   00AB  5F                  ld      e,a
135   00AC  0E 06               ld      c, condio
136   00AE  CD 05 00            call    bdos
137   00B1  D1                  pop     de
138   00B2  18 F1               jr      prtmesg
139   00B4              
140   00B4              ;------------------------------------------------------------------------------
141   00B4              
142   00B4              SECTION  data_user
143   0000              
144   0000              PRINT_OK:
145   0000  20 20 42 49 47 4D 55 4C 20 4F 4B 0A 24 
                                defm    "  BIGMUL OK",lf,eos
146   000D              PRINT_FAIL:
147   000D  20 42 49 47 4D 55 4C 20 46 41 49 4C 0A 24 
                                defm    " BIGMUL FAIL",lf,eos
148   001B              
149   001B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      003B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      005B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      007B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      009B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      00BB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      00DB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      00FB  00 00 00 00 00 
                        ALIGN   $100
150   0100              
151   0100  00 00       XVALUE: DEFS    2
152   0102              
153   0102  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0122  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0142  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0162  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0182  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      01A2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      01C2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      01E2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
                        ALIGN   $100
154   0200              
155   0200  00 00       YVALUE: DEFS    2
156   0202              
157   0202  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0222  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0242  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0262  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0282  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      02A2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      02C2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      02E2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
                        ALIGN   $100
158   0300              
159   0300  00 00 00 00 EXPECT: DEFS    4
160   0304              
161   0304              PRODUCT:
162   0304              
163   0304              
